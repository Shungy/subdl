#!/bin/sh

usage="usage: ${0##*/} [-e episode] [-i imdbid] [-s season] [-l sublanguageid] [-n] [query]"
tmpfile=$(mktemp /tmp/subdl-XXXXXX)
trap 'rm "$tmpfile"' 0 1 15

url_encode() {
	# Query must be URL encoded to handle reserved characters
	printf '%s' "$1" | tr '[:upper:]' '[:lower:]' | \
		printf "%%%s" $(od -v -t x1 -An -) # Do NOT quote!
}

check_num() {
	printf '%s' "$1" | grep '^[0-9]\+$' > /dev/null || {
		printf 'Season and episode must be natural numbers.\n'
		exit 1
	}
}

check_lang() {
	printf '%s' "$1" | grep '^[a-z]\{3\}\(,[a-z]\{3\}\)*$' > /dev/null || {
		printf 'Language code must be 3 letters.\n'
		printf 'Multiple languages must be separated with a comma.\n'
		exit 1
	}
}

check_imdbid() {
	printf '%s' "$1" | grep '^[0-9]\{7\}$' > /dev/null || {
		printf 'Imdbid must be 7 figures.\n'
		printf 'Imdbid must exclude property prefix.\n'
		exit 1
	}
}

check_args() {
	# Either a query or an imdbid must exist.
	[ -z "$1" ] && [ -z "$imdbid" ] && {
		printf '%s\n' "$usage"
		exit 1
	}
}

set_query() {
	# Strip the location prefix if the query is a file.
	if [ -f "$1" ]
	then
		query=$(url_encode "${1##*/}")
	elif [ -n "$1" ]
	then
		query=$(url_encode "$*")
	fi
}

set_addr() {
	printf 'http://rest.opensubtitles.org/search%s%s%s%s%s'    \
	       "${episode:+/episode-}${episode}"                   \
	       "${imdbid:+/imdbid-}${imdbid}"                      \
	       "${query:+/query-}${query}"                         \
	       "${season:+/season-}${season}"                      \
	       "${sublanguageid:+/sublanguageid-}${sublanguageid}"
}

parse_response() {
	jq -e -j '
		. |
		if length == 0
		then
			"no result.\n" | halt_error(1)
		else
			[[range(length) | tostring] ,
			[.[].SubFileName] , [.[].SubLanguageID]] |
			transpose | .[] | " " + .[0] + " [" + .[2] +
			"]: " + .[1] | . + "\n"
		end
	' "$tmpfile"
}

ask_num() {
	parse_response || {
		while read -r LINE
		do
			printf '%s\n' "$LINE"
		done < "$tmpfile"
		exit 1
	}
	printf "Subtitle number (Ctrl-c to cancel): "
	read -r num
	check_num "$num"
}

while getopts ne:i:s:l: opt
do
	case $opt in
		n)
			# Download the first result
			dontask="1"
			;;
		e)
			check_num "$OPTARG"
			episode="$OPTARG"
			;;
		i)
			check_imdbid "$OPTARG"
			imdbid="$OPTARG"
			;;
		s)
			check_num "$OPTARG"
			season="$OPTARG"
			;;
		l)
			check_lang "$OPTARG"
			sublanguageid="$OPTARG"
			;;
		\?)
			printf '%s\n' "$usage"
			exit
			;;
	esac
done

shift $(( OPTIND - 1 ))
check_args "$@"
set_query "$@"
curl -s -S -A 'TemporaryUserAgent' "$(set_addr)" > "$tmpfile"
[ -z "$dontask" ] && ask_num
dlurl=$(jq -j --argjson num "${num:-0}" '.[$num].SubDownloadLink' "$tmpfile")
filename=$(jq -j --argjson num "${num:-0}" '.[$num].SubFileName' "$tmpfile")
curl -s -S "$dlurl" | gzip -d > "$filename" && printf 'Fetched %s.\n' "$filename"
